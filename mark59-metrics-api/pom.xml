<project xmlns="http://maven.apache.org/POM/4.0.0" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.mark59</groupId>
	<artifactId>mark59-metrics-api</artifactId>
	<version>6.4</version>
	<packaging>jar</packaging>

	<name>mark59-metrics-api</name>

	<properties>
		<maven.compiler.target>11</maven.compiler.target>
		<maven.compiler.source>11</maven.compiler.source>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>


	<dependencies>
		
   		<!-- mark59 classes only from mark59 projects, as we use JMeter versions of deps  -->

		<dependency>
			<groupId>com.mark59</groupId>
			<artifactId>mark59-core</artifactId>
			<version>6.4</version>
			<exclusions>
				<exclusion>
				    <groupId>*</groupId>
				    <artifactId>*</artifactId>
				</exclusion>
			</exclusions>	
		</dependency>
		
		<dependency>
			<groupId>com.mark59</groupId>
			<artifactId>mark59-metrics-common</artifactId>
			<version>6.4</version>
			<exclusions>
				<exclusion>
				    <groupId>*</groupId>
				    <artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		
		<dependency>
			<groupId>org.apache.jmeter</groupId>
			<artifactId>ApacheJMeter_java</artifactId>
			<version>5.6.3</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.apache.jmeter</groupId>
		    <artifactId>jorphan</artifactId>
		    <version>5.6.3</version>
			<scope>provided</scope>		    
		</dependency>		
		
   		<!-- add back jars from metrics-commons not included in ApacheJmeter
   		     but used by this this project -->

	<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.24.3</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.24.3</version>
		</dependency>

 		<!-- implement log4j 'SFLF bindings' for test purposes only  -->
		<dependency>
		    <groupId>org.apache.logging.log4j</groupId>
		    <artifactId>log4j-slf4j-impl</artifactId>
		    <version>2.24.3</version>
		    <scope>test</scope>
		</dependency>
   		     
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi</artifactId>
		    <version>5.4.1</version>
		</dependency>
      
		<dependency>
		    <groupId>org.apache.poi</groupId>
		    <artifactId>poi-ooxml</artifactId>
		    <version>5.4.1</version>
		</dependency>

		<!-- added to dep issue with the POI classes
			 https://stackoverflow.com/questions/79580510/springboot-apache-poi-error-reading-xlsx-files/79580564 -->
	    <dependency>
	        <groupId>commons-io</groupId>
	        <artifactId>commons-io</artifactId>
	        <version>2.20.0</version>
	    </dependency>
				

		<dependency>
			<groupId>com.jcraft</groupId>
			<artifactId>jsch</artifactId>
			<version>0.1.55</version>
		</dependency>
		
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>

	</dependencies>


	<build>
		<plugins>

			<!-- override default maven-compiler-plugin version -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.10.1</version>
			</plugin>
		
			<!-- Maven Assembly Plugin -->
			<!-- phase/goals: clean package -->
			<!-- Wraps all the project classes and non-provided dependencies into a single Jar 
			     (to be copied into the jmeter lib/ext folder -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>			
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals><goal>single</goal></goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<finalName>${project.artifactId}</finalName>
	</build>					
		
</project>